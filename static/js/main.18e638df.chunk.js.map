{"version":3,"sources":["Components/Home/Home.js","Components/Header.js","Components/Results/Results.js","App.js","linearRegression/formatInput.js","linearRegression/linearRegression.js","reducers/pageReducer.js","reducers/store.js","index.js"],"names":["Home","props","handleChange","event","updateInput","target","value","handleClick","calculateRegression","bind","className","Slider","this","alpha","onChange","updateAlpha","aria-labelledby","valueLabelDisplay","min","step","max","iterations","updateIterations","placeholder","inputData","Button","onClick","Component","connect","state","page","inputString","dispatch","type","input","Header","style","textAlign","fontFamily","href","color","textDecoration","rel","Results","Plot","createPlotlyComponent","Plotly","theta","data","name","x","y","mode","marker","predictions","line","width","layout","title","costSurface","z","contours","show","usecolormap","highlightcolor","project","height","arrayData","costFunctionSurface","App","path","redirectToResults","to","showResults","formatInput","valid","split","data2","forEach","push","data3","map","number","Number","tensorData","tf","print","shape","arraySync","costFunction","xData","yData","predictY","yPredictions","reshape","gather","transpose","console","log","linearRegression","outputTheta","m","i","part2","mul","gradientDescent","costSurfaceData","xx","length","row","yy","thetas","cost","initialState","runTime","allReducers","combineReducers","action","formattedData","outputPredictions","alert","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18e638df.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport \"./home.css\";\r\nimport { Button, Slider } from \"@material-ui/core\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props = props;\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  handleChange = (event) => {\r\n    this.props.updateInput(event.target.value);\r\n  };\r\n  handleClick = () => {\r\n    this.props.calculateRegression();\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"homeDiv\">\r\n        <div className=\"slidersDiv\">\r\n          <div className=\"sliderDiv\">\r\n            <label>Alpha:</label>\r\n            <Slider\r\n              value={this.props.alpha}\r\n              onChange={(event, value) => {\r\n                this.props.updateAlpha(value);\r\n              }}\r\n              aria-labelledby=\"Alpha\"\r\n              valueLabelDisplay=\"auto\"\r\n              min={0}\r\n              step={0.01}\r\n              max={0.5}\r\n            />\r\n          </div>\r\n          <div className=\"sliderDiv\">\r\n            <label>Iterations:</label>\r\n            <Slider\r\n              value={this.props.iterations}\r\n              onChange={(event, value) => {\r\n                this.props.updateIterations(value);\r\n              }}\r\n              aria-labelledby=\"Iterations\"\r\n              valueLabelDisplay=\"auto\"\r\n              min={10}\r\n              max={1000}\r\n            />\r\n          </div>\r\n        </div>\r\n        <label>2D Data to be fitted</label>\r\n        <textarea\r\n          placeholder=\"X data followed by Y data\r\n1,2,3,4,5\r\n2,3,4,5,6\r\n        \"\r\n          value={this.props.inputData}\r\n          onChange={this.handleChange}\r\n        ></textarea>\r\n        <br />\r\n        <Button onClick={this.handleClick}>Calculate</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  inputData: state.page.inputString,\r\n  alpha: state.page.alpha,\r\n  iterations: state.page.iterations,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateInput: (inputData) => {\r\n    dispatch({ type: \"updateInput\", input: inputData });\r\n  },\r\n  calculateRegression: () => {\r\n    dispatch({ type: \"calculateRegression\" });\r\n  },\r\n  updateAlpha: (alpha) => {\r\n    dispatch({ type: \"updateAlpha\", alpha: alpha });\r\n  },\r\n  updateIterations: (iterations) => {\r\n    dispatch({ type: \"updateIterations\", iterations: iterations });\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ textAlign: \"center\", fontFamily: \"Roboto Mono\" }}>\r\n        <h1>Linear Regression Visualizer</h1>\r\n        <h3>\r\n          <a\r\n            href=\"https://github.com/Hugo-WB\"\r\n            target=\"_blank\"\r\n            style={{ color: \"black\", textDecoration: \"none\" }}\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            By Hugo Wong-Berard\r\n          </a>\r\n        </h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Plotly from \"plotly.js-gl3d-dist\";\r\nimport createPlotlyComponent from \"react-plotly.js/factory\";\r\n\r\nimport \"./results.css\";\r\n\r\nclass Results extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    // const Plotly = require()\r\n    const Plot = createPlotlyComponent(Plotly);\r\n\r\n    return (\r\n      <div className=\"resultsContainer\">\r\n        <div>\r\n          <h4>Theta Values:</h4>\r\n          <p>Theta 0: {this.props.theta[0]}</p>\r\n          <p>Theta 1: {this.props.theta[1]}</p>\r\n        </div>\r\n        <div>\r\n          <Plot\r\n            data={[\r\n              {\r\n                name: \"data\",\r\n                x: this.props.data[0],\r\n                y: this.props.data[1],\r\n                type: \"scatter\",\r\n                mode: \"markers\",\r\n                marker: { color: \"green\" },\r\n              },\r\n              {\r\n                name: \"regression line\",\r\n                type: \"scatter\",\r\n                x: this.props.predictions[0],\r\n                y: this.props.predictions[1],\r\n                mode: \"lines\",\r\n                line: {\r\n                  color: \"rgb(219, 64, 82)\",\r\n                  width: 2,\r\n                },\r\n              },\r\n            ]}\r\n            layout={{\r\n              // width:,\r\n              title: \"Data with regression\",\r\n            }}\r\n            // config={{ staticPlot: true }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Plot\r\n            data={[\r\n              {\r\n                name: \"data\",\r\n                x: this.props.costSurface[0],\r\n                y: this.props.costSurface[1],\r\n                z: this.props.costSurface[2],\r\n                // x:[10,20,30],\r\n                // y:[20,30],\r\n                // z: [\r\n                //   [3.75, 0, 3.75, 15, 33.75],\r\n                //   [1.75, 0.5, 6.75, 20.5, 41.75],\r\n                //   [0.75, 2, 10.75, 27, 50.75],\r\n                //   [0.75, 4.5, 15.75, 34.5, 60.75],\r\n                // ],\r\n                type: \"surface\",\r\n                contours: {\r\n                  z: {\r\n                    show: true,\r\n                    usecolormap: true,\r\n                    highlightcolor: \"#42f462\",\r\n                    project: { z: true },\r\n                  },\r\n                },\r\n              },\r\n            ]}\r\n            layout={{ width: \"300px\", height: \"auto\", title: \"3D\" }}\r\n            // config = {{staticPlot: true}}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  data: state.page.arrayData,\r\n  predictions: state.page.predictions,\r\n  costSurface: state.page.costFunctionSurface,\r\n  theta: state.page.theta,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Results);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter, Switch, Route, Link, Redirect } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nimport Home from \"./Components/Home/Home\";\r\nimport Header from \"./Components/Header\";\r\nimport Results from \"./Components/Results/Results\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"mainDiv\">\r\n          <Header />\r\n          <Switch>\r\n            <Route path=\"/results\">\r\n              <Results />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              {this.props.redirectToResults ? <Redirect to=\"/results\" /> : \"\"}\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  redirectToResults: state.page.showResults,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import * as tf from \"@tensorflow/tfjs\";\r\n\r\nlet formatInput = (input) => {\r\n  let valid = true;\r\n  let data = input.split(\"\\n\");\r\n  let data2 = [];\r\n  data.forEach((line) => {\r\n    data2.push(line.split(\",\"));\r\n  });\r\n  let data3 = data2.map((line) => line.map((number) => Number(number)));\r\n  let tensorData = tf.tensor(data3);\r\n  tensorData.print();\r\n  if (\r\n    tensorData.shape[0] < 2 ||\r\n    tensorData.shape[1] < 2 ||\r\n    tensorData.shape[0] > 2\r\n  ) {\r\n    valid = false;\r\n  }\r\n  let arrayData = tensorData.arraySync();\r\n\r\n  // console.log(\"TESTING\");\r\n  // let a = tf.tensor(\r\n  //   [\r\n  //     [1, 2, 3],\r\n  //     [4, 5, 6],\r\n  //     [2, 3, 4],\r\n  //   ],\r\n  //   [3, 3]\r\n  // );\r\n  // a.print();\r\n  // let b = tf.batchNorm(a, tf.zeros(a.shape), tf.ones(a.shape));\r\n  // b.print();\r\n  // console.log(\"ENDOF TESTING\");\r\n\r\n  return [tensorData, arrayData, valid];\r\n};\r\n \r\nexport default formatInput;\r\n","import * as tf from \"@tensorflow/tfjs\";\r\n\r\nlet costFunction = (xData, yData, theta) => {\r\n  const m = xData.shape[0];\r\n  let part1 = tf\r\n    .sum(tf.square(tf.sub(tf.matMul(xData, theta), yData)))\r\n    .arraySync();\r\n  return (1 / (2 * m)) * part1;\r\n};\r\n\r\nlet predictY = (xData, theta) => {\r\n  let yPredictions = tf.matMul(xData, theta).reshape([1, -1]);\r\n  yPredictions.print();\r\n  xData.print();\r\n  let predictions = tf.concat([xData.gather([1], 1).transpose(), yPredictions]);\r\n  console.log(\"Predictions:\");\r\n  predictions.print();\r\n  return predictions.arraySync();\r\n};\r\n\r\nlet gradientDescent = (xData, yData, theta, alpha, iterations) => {\r\n  const m = xData.shape[0];\r\n  for (let i = 0; i < iterations; i++) {\r\n    // console.log(i)\r\n    let part2 = tf.sub(tf.matMul(xData, theta), yData);\r\n    theta = tf.sub(\r\n      theta,\r\n      tf.matMul(xData.transpose(), part2).mul(tf.scalar(alpha / m))\r\n    );\r\n    // theta.print()\r\n    // console.log(costFunction(xData,yData,theta))\r\n  }\r\n  return theta;\r\n};\r\nlet costSurface = (xData, yData, theta) => {\r\n  let theta0 = theta.arraySync()[0];\r\n  let theta1 = theta.arraySync()[1];\r\n\r\n  // let x = tf.linspace(-2 * theta0, 2 * theta0, 50).arraySync();\r\n  // let y = tf.linspace(-2 * theta1, 2 * theta0, 50).arraySync();\r\n  let x = tf.linspace(-5, 5, 50).arraySync();\r\n  let y = tf.linspace(-5, 5, 50).arraySync();\r\n  console.log(\"THETA VALUES\");\r\n  console.log(x);\r\n  console.log(y);\r\n\r\n  let z = [];\r\n  for (let xx = 0; xx < x.length; xx++) {\r\n    let row = [];\r\n    for (let yy = 0; yy < y.length; yy++) {\r\n      let thetas = tf.tensor([x[xx], y[yy]], [2, 1]);\r\n      let cost = costFunction(xData, yData, thetas)\r\n      row.push(cost);\r\n    }\r\n    z.push(row)\r\n  }\r\n  console.log(\"COST SURFACE:\");\r\n  console.log(z);\r\n  return [x, y, z];\r\n};\r\n\r\nlet linearRegression = (data, alpha, iterations) => {\r\n  //setting up data:\r\n  const axis = 1;\r\n  data = data.transpose();\r\n  data = tf.concat([tf.ones([data.shape[0], 1]), data], axis);\r\n  let xData = data.gather([0, 1], 1);\r\n  let yData = data.gather([2], 1);\r\n\r\n  //perform gradient descent\r\n  let outputTheta = gradientDescent(\r\n    xData,\r\n    yData,\r\n    tf.tensor([1, 1], [2, 1]),\r\n    alpha,\r\n    iterations\r\n  );\r\n\r\n  //get the cost function surface\r\n\r\n  let costSurfaceData = costSurface(xData, yData, outputTheta);\r\n\r\n  return [\r\n    outputTheta.arraySync(),\r\n    predictY(xData, outputTheta),\r\n    costSurfaceData,\r\n  ];\r\n};\r\n\r\nexport default linearRegression;\r\n","import formatInput from \"../linearRegression/formatInput\";\r\nimport linearRegression from \"../linearRegression/linearRegression\";\r\nconst initialState = {\r\n  inputString: \"\",\r\n  inputData: [],\r\n  arrayData: [\r\n    [-1, 1, 2, 3, 4, 5],\r\n    [-1, 1, 2, 3, 4, 5],\r\n  ],\r\n  theta: [],\r\n  predictions: [[0,1],[0,1]],\r\n  alpha: 0.01,\r\n  iterations: 500,\r\n  runTime: 0,\r\n  showResults: false,\r\n  costFunctionSurface: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"updateInput\":\r\n      return {\r\n        ...state,\r\n        inputString: action.input,\r\n      };\r\n    case \"calculateRegression\":\r\n      let [formattedData, arrayData, valid] = formatInput(state.inputString);\r\n      console.log(\"passed format input\");\r\n      if (valid) {\r\n        let [outputTheta, outputPredictions,costSurfaceData] = linearRegression(\r\n          formattedData,\r\n          state.alpha,\r\n          state.iterations\r\n        );\r\n        return {\r\n          ...state,\r\n          showResults: true,\r\n          inputData: formattedData,\r\n          arrayData: arrayData,\r\n          theta: outputTheta,\r\n          predictions: outputPredictions,\r\n          costFunctionSurface:costSurfaceData,\r\n        };\r\n      } else {\r\n        alert(\"the data you entered is not valid please try again\");\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n    case \"updateAlpha\":\r\n      return {\r\n        ...state,\r\n        alpha: action.alpha,\r\n      };\r\n    case \"updateIterations\":\r\n      return {\r\n        ...state,\r\n        iterations: action.iterations,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport pageReducer from \"./pageReducer\";\r\nconst allReducers = combineReducers({\r\n  page: pageReducer,\r\n});\r\n\r\nexport default allReducers;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nimport allReducers from \"./reducers/store\";\r\n\r\nconst store = createStore(allReducers);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}