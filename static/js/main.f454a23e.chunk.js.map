{"version":3,"sources":["history.js","Components/Home/Home.js","Components/Header.js","Components/Results/Results.js","App.js","linearRegression/formatInput.js","reducers/pageReducer.js","reducers/store.js","index.js"],"names":["createBrowserHistory","Home","props","handleChange","event","updateInput","target","value","handleClick","calculateRegression","bind","className","placeholder","this","inputData","onChange","onClick","history","push","Component","connect","state","page","inputString","dispatch","type","input","Header","style","textAlign","fontFamily","href","color","textDecoration","rel","Results","Plot","createPlotlyComponent","Plotly","data","x","y","mode","marker","layout","width","height","title","config","staticPlot","arrayData","App","path","formatInput","console","log","valid","split","data2","forEach","line","data3","map","number","Number","tensorData","tf","print","arraySync","shape","initialState","regressionEquation","allReducers","combineReducers","action","formattedData","alert","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4aAEeA,gBCQTC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAKRC,aAAe,SAACC,GACd,EAAKF,MAAMG,YAAYD,EAAME,OAAOC,QAPnB,EASnBC,YAAc,WACZ,EAAKN,MAAMO,uBARX,EAAKP,MAAQA,EACb,EAAKC,aAAe,EAAKA,aAAaO,KAAlB,gBACpB,EAAKF,YAAc,EAAKA,YAAYE,KAAjB,gBAJF,E,qDAajB,OACE,yBAAKC,UAAY,WACb,uDAGA,8BAAUC,YAAY,yDAGpBL,MAASM,KAAKX,MAAMY,UAAWC,SAAYF,KAAKV,eAGlD,6BACA,4BAAQa,QAAWH,KAAKL,aAAxB,aAEA,4BAAQQ,QAAW,WACjBC,EAAQC,KAAK,cADf,kB,GA5BSC,aAiDJC,eAZS,SAACC,GAAD,MAAY,CAClCP,UAAWO,EAAMC,KAAKC,gBAEG,SAACC,GAAD,MAAe,CACxCnB,YAAc,SAACS,GACbU,EAAS,CAACC,KAAK,cAAcC,MAAMZ,KAErCL,oBAAsB,WACpBe,EAAS,CAACC,KAAK,4BAIJL,CAA6CnB,GCxDvC0B,E,uKAEjB,OACE,yBAAKC,MAAS,CAACC,UAAW,SAAUC,WAAW,gBAC7C,4DACA,4BACE,uBAAGC,KAAO,6BAA6BzB,OAAO,SAASsB,MAAS,CAACI,MAAM,QAAQC,eAAe,QAASC,IAAI,uBAA3G,6B,GAN0Bf,a,oCCK9BgB,G,0DACJ,WAAYjC,GAAO,uCACXA,G,qDAGN,IAAMkC,EAAOC,IAAsBC,KACnC,OACE,yBAAK3B,UAAY,oBACf,kBAACyB,EAAD,CACEG,KAAM,CACJ,CACEC,EAAG3B,KAAKX,MAAMqC,KAAK,GACnBE,EAAG5B,KAAKX,MAAMqC,KAAK,GACnBd,KAAM,UACNiB,KAAM,UACNC,OAAQ,CAACX,MAAO,SAGpBY,OAAQ,CAACC,MAAO,OAAQC,OAAQ,OAAQC,MAAO,gBAC/CC,OAAU,CAACC,YAAY,U,GAnBX9B,cAkCPC,eARS,SAACC,GAAD,MAAY,CAClCkB,KAAOlB,EAAMC,KAAK4B,aAGO,GAIZ9B,CAA6Ce,GCzBtDgB,G,0DACJ,WAAYjD,GAAQ,uCACZA,G,qDAGN,OACE,kBAAC,IAAD,CAAQe,QAASA,GACf,yBAAKN,UAAY,WACf,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyC,KAAK,YACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,c,GAdIjC,cA8BHC,eANS,SAACC,GAAD,MAAY,MAET,SAACG,GAAD,MAAe,KAI3BJ,CAA6C+B,G,kCClB7CE,EA3BG,SAAC3B,GACjB4B,QAAQC,IAAI,oBACZD,QAAQC,IAAI7B,GACZ4B,QAAQC,IAAI,UACZ,IAAIC,GAAQ,EACRjB,EAAOb,EAAM+B,MAAM,MACnBC,EAAQ,GACZnB,EAAKoB,SAAQ,SAAAC,GACXF,EAAMxC,KAAM0C,EAAKH,MAAM,SAEzB,IAAII,EAAQH,EAAMI,KAAI,SAACF,GAAD,OACpBA,EAAKE,KAAI,SAACC,GAAD,OACPC,OAAOD,SAGPE,EAAaC,IAAUL,GAC3BI,EAAWE,QACXb,QAAQC,IAAIU,EAAWG,aACvBd,QAAQC,IAAIU,EAAWI,QAClBJ,EAAWI,MAAM,GAAG,GAAOJ,EAAWI,MAAM,GAAG,GAAMJ,EAAWI,MAAM,GAAG,KAC5Eb,GAAQ,GAEV,IAAIN,EAAYe,EAAWG,YAE3B,OADAd,QAAQC,IAAI,CAACU,EAAWf,EAAUM,IAC3B,CAACS,EAAWf,EAAUM,ICvBzBc,EAAe,CACnB/C,YAAa,GACbT,UAAW,GACXoC,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IACtCqB,mBAAmB,UCDNC,EAJKC,YAAgB,CAChCnD,KDOW,WAAgC,IAA/BD,EAA8B,uDAAtBiD,EAAaI,EAAS,uCAC5C,OAAQA,EAAOjD,MACb,IAAK,cACH,OAAO,2BACFJ,GADL,IAEEE,YAAamD,EAAOhD,QAExB,IAAK,sBAAL,MACwC2B,EAAYhC,EAAME,aAD1D,mBACOoD,EADP,KACqBzB,EADrB,KAC+BM,EAD/B,KAIE,OAFAF,QAAQC,IAAI,uBACZD,QAAQC,IAAItC,GACTuC,GACDvC,EAAQC,KAAK,YACb,2BACKG,GADL,IAEEP,UAAW6D,EACXzB,UAAWA,MAIb0B,MAAM,sDACN,eACKvD,IAGT,QACE,OAAOA,ME5BPwD,EAAQC,YAAYN,GAE1BO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,QAGJK,SAASC,eAAe,U","file":"static/js/main.f454a23e.chunk.js","sourcesContent":["// history.js\r\nimport { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();\r\n","import React, { Component } from 'react'\r\nimport {\r\n  Link,\r\n  useHistory\r\n} from \"react-router-dom\";\r\n\r\nimport {connect} from 'react-redux'\r\nimport \"./home.css\"\r\nimport history from \"../../history\"\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.props = props\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleClick = this.handleClick.bind(this)\r\n  }\r\n  handleChange = (event) =>{\r\n    this.props.updateInput(event.target.value)\r\n  }\r\n  handleClick = () =>{\r\n    this.props.calculateRegression()\r\n  }\r\n  render() {\r\n    return (\r\n      <div className = \"homeDiv\">\r\n          <label>\r\n            2D Data to be fitted\r\n          </label>\r\n          <textarea placeholder=\"X data followed by Y data\r\n1,2,3,4,5\r\n2,3,4,5,6\r\n          \" value = {this.props.inputData} onChange = {this.handleChange}>\r\n\r\n          </textarea>\r\n          <br />\r\n          <button onClick = {this.handleClick}>Calculate</button>\r\n          \r\n          <button onClick = {()=>{\r\n            history.push(\"/results\")\r\n            }}>Calculate</button>\r\n          \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  inputData: state.page.inputString\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateInput : (inputData) =>{\r\n    dispatch({type:\"updateInput\",input:inputData})\r\n  },\r\n  calculateRegression : ()=>{\r\n    dispatch({type:\"calculateRegression\"})\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import React, { Component } from 'react'\r\n\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div style = {{textAlign: 'center', fontFamily:\"Roboto Mono\"}}>\r\n        <h1>Linear Regression Visualizer</h1>\r\n        <h3>\r\n          <a href = \"https://github.com/Hugo-WB\" target=\"_blank\" style = {{color:\"black\",textDecoration:\"none\"}} rel=\"noopener noreferrer\">\r\n            By Hugo Wong-Berard\r\n          </a>\r\n        </h3>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Plotly from \"plotly.js\"\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\n\r\nimport \"./results.css\"\r\n\r\nclass Results extends Component {\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n  render() {\r\n    const Plot = createPlotlyComponent(Plotly);\r\n    return (\r\n      <div className = \"resultsContainer\">\r\n        <Plot\r\n          data={[\r\n            {\r\n              x: this.props.data[0],\r\n              y: this.props.data[1],\r\n              type: 'scatter',\r\n              mode: 'markers',\r\n              marker: {color: 'red'},\r\n            },\r\n          ]}\r\n          layout={{width: \"40vw\", height: \"40vh\", title: 'Plotted Data'}}\r\n          config = {{staticPlot: true}}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  data : state.page.arrayData,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Results)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {\r\n  Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport Home from \"./Components/Home/Home\"\r\nimport Header from \"./Components/Header\"\r\nimport Results from \"./Components/Results/Results\"\r\nimport \"./App.css\"\r\n\r\nimport history from \"./history.js\"\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  render() {\r\n    return (\r\n      <Router history={history}>\r\n        <div className = \"mainDiv\">\r\n          <Header />\r\n          <Switch>\r\n            <Route path=\"/results\">\r\n              <Results />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    )\r\n    \r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  \r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import * as tf from \"@tensorflow/tfjs\"\r\n\r\nlet formatInput = (input) =>{\r\n  console.log(\"FORMATTING INPUT\")\r\n  console.log(input)\r\n  console.log(\"potato\")\r\n  let valid = true\r\n  let data = input.split(\"\\n\")\r\n  let data2 = []\r\n  data.forEach(line => {\r\n    data2.push((line.split(\",\")))\r\n  });\r\n  let data3 = data2.map((line)=>\r\n    line.map((number)=>\r\n      Number(number)\r\n    )\r\n  )\r\n  let tensorData = tf.tensor(data3)\r\n  tensorData.print()\r\n  console.log(tensorData.arraySync())\r\n  console.log(tensorData.shape)\r\n  if ((tensorData.shape[0]<2) || (tensorData.shape[1]<2)|| (tensorData.shape[0]>2)){\r\n    valid = false\r\n  }\r\n  let arrayData = tensorData.arraySync()\r\n  console.log([tensorData,arrayData,valid])\r\n  return [tensorData,arrayData,valid]\r\n}\r\n\r\nexport default formatInput","\r\nimport history from \"../history.js\"\r\nimport formatInput from \"../linearRegression/formatInput\"\r\nconst initialState = {\r\n  inputString: \"\",\r\n  inputData: [],\r\n  arrayData:[[-1,1,2,3,4,5],[-1,1,2,3,4,5]],\r\n  regressionEquation:\"y=mx+c\"\r\n}\r\n\r\nexport default (state = initialState,action)=>{\r\n  switch (action.type){\r\n    case \"updateInput\":\r\n      return {\r\n        ...state,\r\n        inputString: action.input\r\n      }\r\n    case \"calculateRegression\":\r\n      let [formattedData,arrayData,valid] = formatInput(state.inputString)\r\n      console.log(\"passed format input\")\r\n      console.log(history)\r\n      if(valid){\r\n        history.push(\"/results\")\r\n        return{\r\n          ...state,\r\n          inputData: formattedData,\r\n          arrayData: arrayData,\r\n        }\r\n      }\r\n      else{\r\n        alert(\"the data you entered is not valid please try again\")\r\n        return{\r\n          ...state\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import {combineReducers} from 'redux';\r\nimport pageReducer from \"./pageReducer\"\r\nconst allReducers = combineReducers({\r\n    page:pageReducer,\r\n})\r\n\r\nexport default allReducers;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport {createStore} from 'redux';\r\n\r\nimport allReducers from \"./reducers/store\"\r\n\r\nconst store = createStore(allReducers)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}